name: Cloudflare Pages
on:
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - ".github/workflows/cloudflare-pages.yml"
    - 'src/**'
    - '!**/*.md'
  pull_request:
    paths:
    - ".github/workflows/cloudflare-pages.yml"
    - 'src/**'
    - '!**/*.md'

env:
  CONFIGURATION: Release
  DOTNET_VERSION: 8.0.x
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  WORKING_DIRECTORY: src
  TESTING_DIRECTORY: src
  PUBLISH_PROJECT: src/try-cloudflarepages
  PUBLISH_DIRECTORY: output
  PAGES_PROJECTNAME: try-cloudflare-pages-upload-with-gh-actions

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    name: on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      deployments: write
      statuses: write # for commit status
    steps:
    - name: 🛒 Checkout
      uses: actions/checkout@v4.2.2
    - name: 💴 Cache
      id: cache-nuget
      uses: actions/cache@v4.2.0
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: ❔ Cache Hit ${{ steps.cache-nuget.outputs.cache-hit }}
      run: |
        echo "→ ${{ steps.cache-nuget.outputs.cache-hit }}"
    - name: ✨ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: 🧰 Setup .NET workloads
      run: dotnet workload install wasm-tools
    - name: 🚚 Restore with lock files
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}" --locked-mode
    - name: 🛠️ Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: 🧪 Test
      run: dotnet test "${{ env.TESTING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --filter 'Category!=local'
    - name: 🚀 Publish
      run: dotnet publish "${{ env.PUBLISH_PROJECT }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.PUBLISH_DIRECTORY }}"

    - name: 🚢 Deploy to Cloudflare Pages
      id: deploy
      uses: cloudflare/wrangler-action@v3.14.0
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: pages deploy ${{ env.PUBLISH_DIRECTORY }}/wwwroot --project-name=${{ env.PAGES_PROJECTNAME }} --commit-dirty=true

    - name: 📖 Print deployment URL
      env:
        DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment-url }}
      run: echo "### ✅ Deploy succeeded! [${{ env.PAGES_PROJECTNAME }}.pages.dev](${{ env.DEPLOYMENT_URL }}) 🌟" >> $GITHUB_STEP_SUMMARY
